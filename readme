#README

#WHAT IS IT FOR 

This program is a network protocol analyser tool, similar to Wireshark. It takes as input a text file that contains the captured octets of one or several 
Ethernet frames. The tool is able to analyse the following protocols:
	-Data Link Layer: Ethernet
	-Network Layer: IP
	-Transport Layer: UDP
	-Application Layer: DNS and DHCP
The output of the tool is a window with the protocols contained in each trace as well as all the information that can be extracted from these protocols. 


#HOW TO USE

The language used was Python. No python libraries were used. The tool can be executed using a regular python script executer or the .exe file. 
In order to use the tool the user has to introduce the path of the text file to analyse in the terminal when requested. After that the tool will 
analyse the protocols by itself without the intervention of the user and will display the captured protocols and the information and options they contain. 
	
	
#LIMITATIONS	
	
The tool is able to filter out the useful octets from the text files, ignoring lines of octets that are defined by the wrong offset octets or random 
characters. It is also able to analyse  files with several Ethernet frames. The tool is also able to detect length errors within the frame in case the 
indicated length by the octets differs from the actual length of the frame.

The tool is not able to verify whether the checksum of the IP and UDP protocols is verified. Furthermore, it can detect the existence of other protocols 
in the frame such as ICMP or TCP but it is not able to further analyse its champs and options. 


#STRUCTURE

The program is organized similarly to the different layers that the network protocol is made of. 
The main program can be found in 'main.py'. This code retrieves the input from the user, as well as combines all the elements of the tool.
It generates the parsing function from the imported 'hexdecoder.py' and imports the functions that analyse the different layers.
The parsing function takes care of rearranging the information from the input file in order to generate strings of octects that can be 
analysed by the protocol functions. 
The analysis of the different layers is carried out by:
	-'datalink.py': Ethernet 
	-'network.py': IP
	-'transport.py': UDP
	-'application.py': DNS and DHCP


